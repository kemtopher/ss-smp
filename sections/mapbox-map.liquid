{% schema %}
    {
      "name": "Mapbox Map",
      "settings": [
        {
          "type": "text",
          "id": "mapbox_api_key",
          "label": "Mapbox API Key",
          "info": "Enter your Mapbox API key"
        },
        {
          "type": "text",
          "id": "map_latitude",
          "label": "Default Latitude",
          "default": "40.7128"
        },
        {
          "type": "text",
          "id": "map_longitude",
          "label": "Default Longitude",
          "default": "-74.0060"
        },
        {
          "type": "text",
          "id": "map_zoom",
          "label": "Map Zoom Level",
          "default": "12"
        }
      ],
      "presets": [
        {
          "name": "Mapbox Map",
          "category": "Custom"
        }
      ]
    }
    {% endschema %}
    
    <div id="map" style="width: 100%; height: 400px;"></div>
    
    <script>
    document.addEventListener("DOMContentLoaded", () => {

        const fetchStoreData = async () => {
            try {
                const res = await fetch("https://cdn.shopify.com/s/files/1/0723/2474/3380/files/sellers_cleaned.json?v=1741544199");

                if (!res.ok) {
                    throw new Error(`Failed to fetch: ${res.status}`);
                }

                return await res.json();
            } catch (error) {
                console.error("Error fetching sellers:", error);
                return [];
            }
        };

        const fetchStoreLonLat = async (fieldText) => {
            try {
                const res = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${fieldText}.json?access_token=pk.eyJ1IjoiYXF1YXllIiwiYSI6ImNrN3NjdTdmczBkZmQzZnIyenZ1djR1dXkifQ.chRGR88GhxPG1Yk-2DDzqw`);

                if (!res.ok) {
                    throw new Error(`Failed to fetch: ${res.status}`);
                }

                const data = await res.json();
                const lonLat = {
                    lng: data.features[0].center[0],
                    lat: data.features[0].center[1]
                };
                
                return lonLat;
            } catch (error) {
                console.log("Error finding location. See error: ", error);
                return[];
            }
        }

        const mapboxApiKey = "{{ section.settings.mapbox_api_key }}";
        const lat = parseFloat("{{ section.settings.map_latitude }}");
        const lng = parseFloat("{{ section.settings.map_longitude }}");
        const zoomLevel = parseInt("{{ section.settings.map_zoom }}", 10);

        if (!mapboxApiKey) {
            console.error("Mapbox API key is missing!");
            return;
        }

        const script = document.createElement("script");
        script.src = "https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js";
        script.onload = () => {
            mapboxgl.accessToken = mapboxApiKey;
            const map = new mapboxgl.Map({
                container: "map",
                style: "mapbox://styles/mapbox/streets-v11",
                center: [lng, lat],
                zoom: 22,
                cooperativeGestures: true
            });

            const nav = new mapboxgl.NavigationControl({
                showZoom: true
            });

            const geolocate = new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },
                trackUserLocation: true,
                showUserHeading: true
            });

            map.on('load', () => {
                geolocate.trigger();
            });

            map.addControl(nav, 'top-left');
            map.addControl(geolocate, 'top-left'); 

            // (async () => {
            //     const sellers = await fetchStoreData();
            //     const storeNames = sellers.map(seller => seller);

            //     storeNames.forEach(store => {
            //         // check to see if the object has the necessary data to complete request
            //         if (store.city === null || store.state === null) {
            //             return;
            //         } else {
            //             const popUpContent = '<strong>Truckeroo</strong><p><a href="http://www.truckeroodc.com/www/" target="_blank">Truckeroo</a> brings dozens of food trucks, live music, and games to half and M Street SE (across from Navy Yard Metro Station) today from 11:00 a.m. to 11:00 p.m.</p>';

            //             (async () => {
            //                 const location = await fetchStoreLonLat(`${store.city}, ${store.state}`);

            //                 new mapboxgl.Marker().setLngLat([location.lng, location.lat]).addTo(map);

            //                 new mapboxgl.Popup()
            //                     .setLngLat([location.lng, location.lat])
            //                     .setHTML(popUpContent)
            //                     .addTo(map);
            //             })();
            //         }
            //     })
            // })();
            (async () => {
                const sellers = await fetchStoreData();
                const storeNames = sellers.map(seller => seller);

                let activePopup = null; // Track the currently open popup

                storeNames.forEach(store => {
                    // Check if store has required location data
                    if (!store.city || !store.state) {
                        return;
                    }

                    const popUpContent = `
                        <strong>${store.name || "Unknown Store"}</strong>
                        <p>Location: ${store.city}, ${store.state}</p>
                        <a href="http://www.truckeroodc.com/www/" target="_blank">Visit Website</a>
                    `;

                    (async () => {
                        const location = await fetchStoreLonLat(`${store.city}, ${store.state}`);

                        const marker = new mapboxgl.Marker()
                            .setLngLat([location.lng, location.lat])
                            .addTo(map);

                        const popup = new mapboxgl.Popup({
                            // closeOnClick: false
                        }).setHTML(popUpContent);

                        // not adding marker to map or not making active
                        // marker.getElement().addEventListener("click", (e) => {
                        //     // second click closes popup
                        //     console.log(activePopup)
                        //     if (activePopup === popup) {
                        //         console.log("no longer active")
                        //         popup.remove();
                        //         activePopup = null;
                        //     } else {
                        //         console.log("new active popup");

                        //         if (activePopup) {
                        //             activePopup.remove();
                        //         }

                        //         popup.addTo(map);
                        //         activePopup = popup;
                        //         console.log(activePopup)
                        //     }
                        // });
                    })();
                });
            })();

        };

        document.body.appendChild(script);
    });
    </script>
    
    <style>
    @import url('https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css');
    #map {
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .mapboxgl-popup {
        max-width: 400px;
        font:
            12px/20px 'Helvetica Neue',
            Arial,
            Helvetica,
            sans-serif;
    }
    </style>

  